
package loginandreg;
import Classes.PatternChecker;
import java.awt.*;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;


/**
 *
 * @author OmarKandeel
 */
public class Dash extends javax.swing.JFrame {
       // array of panels
    JPanel[] panels= new JPanel[5];
    private boolean confirmedpassword=false;
    
    public Dash() {
        initComponents();
         this.setLocationRelativeTo(null);
           panels[0] = jPanel_Dash;
           panels[1] = jPanel_Cards;
           panels[2] = jPanel_Transaction;
           panels[3] = jPanel_Transfer;
           panels[4] = jPanel_Settings;
            
    }
  public void showPanel (JPanel panel)
    {  
        for (JPanel pnl : panels)
        {   //hide panles
            pnl.setVisible(false);
            
        }
            //show only this panel
            panel.setVisible(true);
    }
    private boolean isDarkMode = false;
  
    public String Acc_cardno=new String(); 
    public String Acc_fname=new String(); 
    public String National_no=new String();
    public String ball=new String();
    public String acc_pass=new String();
    public String acc_Cat=new String();
    
    private int Basic_transNO=0;
   
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void UpdateCardsTable() {

         DefaultTableModel modely = (DefaultTableModel) CardsTable.getModel();
        modely.setRowCount(0); // Clear all rows from the table

        try {
            // Establish database connection
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");

            // Prepare the SQL statement
            String sqlCommand = "SELECT * FROM cards as c JOIN customers AS a ON a.national_id = c.national_no WHERE a.national_id = ?;";
            PreparedStatement pstmt = con.prepareStatement(sqlCommand);
            pstmt.setString(1, this.National_no); // Assuming National_no is a member variable of the class

            // Execute the SQL statement
            ResultSet rs = pstmt.executeQuery();

            // Process the result set and update the table
            while (rs.next()) {
                String fname = rs.getString("fname");
                String lname = rs.getString("lname");
                String name = fname + " " + lname;
                String card = rs.getString("card_no");
                String cvv = rs.getString("cvv");
                String dateOpen = rs.getString("expire_date"); // Assuming the date format is appropriate for display
                String balance = rs.getString("balance");
                modely.addRow(new String[]{name, card, cvv, dateOpen, balance});
            }

            // Close resources
            rs.close();
            pstmt.close();
            con.close();
        } catch (SQLException e) {
            // Log the error and show a message dialog
            JOptionPane.showMessageDialog(this, "Error updating cards table: " + e.getMessage());
            System.err.println("Error updating cards table: " + e.getMessage());
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        left = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton_Logout = new javax.swing.JButton();
        jButton_Mode = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jPanel_Dash = new javax.swing.JPanel();
        WelcomingMess = new javax.swing.JLabel();
        jPanel_Transaction = new javax.swing.JPanel();
        transactions = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TransTable = new javax.swing.JTable();
        print = new com.k33ptoo.components.KButton();
        DeleteTableRow = new com.k33ptoo.components.KButton();
        ClearTable = new com.k33ptoo.components.KButton();
        jPanel_Cards = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        DelCard = new com.k33ptoo.components.KButton();
        AddCard = new com.k33ptoo.components.KButton();
        SetCard = new com.k33ptoo.components.KButton();
        LockCard = new com.k33ptoo.components.KButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        CardsTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        FulName = new javax.swing.JLabel();
        Expire = new javax.swing.JLabel();
        Cardii = new javax.swing.JLabel();
        jPanel_Transfer = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        national = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        AmountTO = new javax.swing.JTextField();
        AccPass = new javax.swing.JPasswordField();
        Transfer = new com.k33ptoo.components.KButton();
        togbtn1 = new javax.swing.JToggleButton();
        jPanel_Settings = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Settings_logo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ffname = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        llname = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        eemail = new javax.swing.JTextField();
        kButton2 = new com.k33ptoo.components.KButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        kButton3 = new com.k33ptoo.components.KButton();
        oldd = new javax.swing.JPasswordField();
        passs1 = new javax.swing.JPasswordField();
        jPanel_Mode = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        LightMode = new javax.swing.JButton();
        DarkMode = new javax.swing.JButton();
        SupportButton = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        passss2 = new javax.swing.JPasswordField();
        Bar = new Classes.ProgressBarCustom();
        mess = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        left.setBackground(new java.awt.Color(0, 102, 102));
        left.setForeground(new java.awt.Color(0, 102, 102));

        jLabel7.setFont(new java.awt.Font("Mistral", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("EasyPay");

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI Historic", 0, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/icons8-menu-24.png"))); // NOI18N
        jButton1.setText("DashBoard");
        jButton1.setToolTipText("Click here to go to the Dashboard;)");
        jButton1.setAutoscrolls(true);
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setDoubleBuffered(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 102));
        jButton2.setFont(new java.awt.Font("Segoe UI Historic", 0, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(242, 242, 242));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/icons8-transfer-24 (1).png"))); // NOI18N
        jButton2.setText("Transfer");
        jButton2.setToolTipText("Click here to go to the Transfer ;)");
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 102, 102));
        jButton3.setFont(new java.awt.Font("Segoe UI Historic", 0, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(242, 242, 242));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/icons8-cards-24 (3).png"))); // NOI18N
        jButton3.setText("Cards");
        jButton3.setToolTipText("Click here to go to the Cards ;)");
        jButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 102, 102));
        jButton4.setFont(new java.awt.Font("Segoe UI Historic", 0, 16)); // NOI18N
        jButton4.setForeground(new java.awt.Color(242, 242, 242));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/icons8-transaction-24 (1).png"))); // NOI18N
        jButton4.setText("Transactions");
        jButton4.setToolTipText("Click here to go to the Transactions ;)");
        jButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 102, 102));
        jButton5.setFont(new java.awt.Font("Segoe UI Historic", 0, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(242, 242, 242));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/icons8-settings-24.png"))); // NOI18N
        jButton5.setText("Settigns");
        jButton5.setToolTipText("Click here to go to the Settigns ;)");
        jButton5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton_Logout.setBackground(new java.awt.Color(0, 102, 102));
        jButton_Logout.setFont(new java.awt.Font("Segoe UI Historic", 0, 16)); // NOI18N
        jButton_Logout.setForeground(new java.awt.Color(242, 242, 242));
        jButton_Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/icons8-logout-24.png"))); // NOI18N
        jButton_Logout.setText("Logout");
        jButton_Logout.setToolTipText("Click here to go to the Settigns ;)");
        jButton_Logout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton_Logout.setContentAreaFilled(false);
        jButton_Logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LogoutActionPerformed(evt);
            }
        });

        jButton_Mode.setBackground(new java.awt.Color(0, 102, 102));
        jButton_Mode.setFont(new java.awt.Font("Segoe UI Historic", 0, 16)); // NOI18N
        jButton_Mode.setForeground(new java.awt.Color(242, 242, 242));
        jButton_Mode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/icons8-dark-mode-24.png"))); // NOI18N
        jButton_Mode.setText("Mode");
        jButton_Mode.setToolTipText("Click here to go to the Settigns ;)");
        jButton_Mode.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton_Mode.setContentAreaFilled(false);
        jButton_Mode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Mode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ModeActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Mistral", 0, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("exit");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout leftLayout = new javax.swing.GroupLayout(left);
        left.setLayout(leftLayout);
        leftLayout.setHorizontalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftLayout.createSequentialGroup()
                .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel7))
                    .addGroup(leftLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jButton1)
                            .addComponent(jButton4)
                            .addComponent(jButton_Logout)
                            .addComponent(jButton_Mode)
                            .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton2)
                                .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftLayout.setVerticalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(30, 30, 30)
                .addComponent(jButton3)
                .addGap(30, 30, 30)
                .addComponent(jButton4)
                .addGap(30, 30, 30)
                .addComponent(jButton2)
                .addGap(30, 30, 30)
                .addComponent(jButton_Mode, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton_Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(27, 27, 27))
        );

        jPanel_Dash.setPreferredSize(new java.awt.Dimension(934, 510));

        WelcomingMess.setFont(new java.awt.Font("Sitka Text", 0, 48)); // NOI18N
        WelcomingMess.setText("Hello to DashBoard");

        javax.swing.GroupLayout jPanel_DashLayout = new javax.swing.GroupLayout(jPanel_Dash);
        jPanel_Dash.setLayout(jPanel_DashLayout);
        jPanel_DashLayout.setHorizontalGroup(
            jPanel_DashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DashLayout.createSequentialGroup()
                .addComponent(WelcomingMess, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_DashLayout.setVerticalGroup(
            jPanel_DashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DashLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WelcomingMess)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_Transaction.setBackground(new java.awt.Color(0, 153, 153));
        jPanel_Transaction.setPreferredSize(new java.awt.Dimension(934, 510));

        transactions.setFont(new java.awt.Font("Segoe UI Historic", 0, 48)); // NOI18N
        transactions.setText("Transaction History");

        TransTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Transaction number", "From", "To", "Amount", "Balance", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TransTable.setSelectionBackground(new java.awt.Color(0, 0, 153));
        TransTable.getTableHeader().setResizingAllowed(false);
        TransTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TransTable);

        print.setText("Print");
        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printMouseClicked(evt);
            }
        });

        DeleteTableRow.setText("Delete");
        DeleteTableRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteTableRowMouseClicked(evt);
            }
        });

        ClearTable.setText("Clear");
        ClearTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearTableMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_TransactionLayout = new javax.swing.GroupLayout(jPanel_Transaction);
        jPanel_Transaction.setLayout(jPanel_TransactionLayout);
        jPanel_TransactionLayout.setHorizontalGroup(
            jPanel_TransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TransactionLayout.createSequentialGroup()
                .addGroup(jPanel_TransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_TransactionLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(transactions, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_TransactionLayout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(DeleteTableRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(ClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 981, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_TransactionLayout.setVerticalGroup(
            jPanel_TransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TransactionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transactions, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel_TransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteTableRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel_Cards.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Cards.setPreferredSize(new java.awt.Dimension(934, 510));

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setBackground(new java.awt.Color(187, 187, 187));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("Cards");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(407, 407, 407))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        DelCard.setText("Delete");
        DelCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DelCardMouseClicked(evt);
            }
        });

        AddCard.setText("Add");
        AddCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddCardMouseClicked(evt);
            }
        });

        SetCard.setText("Reset pin");
        SetCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SetCardMouseClicked(evt);
            }
        });

        LockCard.setText("Lock");
        LockCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LockCardMouseClicked(evt);
            }
        });

        CardsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "name", "card number", "cvv", "expire date", "balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(CardsTable);
        if (CardsTable.getColumnModel().getColumnCount() > 0) {
            CardsTable.getColumnModel().getColumn(0).setResizable(false);
            CardsTable.getColumnModel().getColumn(1).setResizable(false);
            CardsTable.getColumnModel().getColumn(2).setResizable(false);
            CardsTable.getColumnModel().getColumn(3).setResizable(false);
            CardsTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel5.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/card1.png"))); // NOI18N
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 230, 130));
        jPanel5.add(FulName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 150, 30));

        Expire.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Expire.setText("653");
        jPanel5.add(Expire, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 40, 20));
        jPanel5.add(Cardii, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 76, 250, 30));

        javax.swing.GroupLayout jPanel_CardsLayout = new javax.swing.GroupLayout(jPanel_Cards);
        jPanel_Cards.setLayout(jPanel_CardsLayout);
        jPanel_CardsLayout.setHorizontalGroup(
            jPanel_CardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel_CardsLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel_CardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_CardsLayout.createSequentialGroup()
                        .addComponent(AddCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(DelCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SetCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(LockCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CardsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(235, 235, 235))
        );
        jPanel_CardsLayout.setVerticalGroup(
            jPanel_CardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CardsLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel_CardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DelCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SetCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LockCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_Transfer.setBackground(java.awt.Color.white);
        jPanel_Transfer.setPreferredSize(new java.awt.Dimension(934, 510));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/transferLogo.v1.png"))); // NOI18N
        logo.setRequestFocusEnabled(false);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(943, 125));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/template2.png"))); // NOI18N
        jLabel4.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/icons8-user-50.png"))); // NOI18N
        jLabel8.setMaximumSize(new java.awt.Dimension(25, 16));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Transfer");

        jLabel10.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("Make sure you enter correct password");

        jLabel11.setFont(new java.awt.Font("Sitka Text", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Make sure you enter the correct user name");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Pass:");

        national.setBackground(new Color(0,0,0,0));
        national.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        national.setDisabledTextColor(new java.awt.Color(204, 204, 0));
        national.setSelectedTextColor(new java.awt.Color(242, 242, 242));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 102, 102));
        jLabel12.setText("National number");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 102));
        jLabel13.setText("Amount:");

        AmountTO.setBackground(new Color(0,0,0,0));
        AmountTO.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        AmountTO.setDisabledTextColor(new java.awt.Color(204, 204, 0));
        AmountTO.setSelectedTextColor(new java.awt.Color(242, 242, 242));
        AmountTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmountTOActionPerformed(evt);
            }
        });

        AccPass.setBackground(new Color(0,0,0,0));
        AccPass.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        AccPass.setSelectedTextColor(new java.awt.Color(242, 242, 242));

        Transfer.setForeground(new java.awt.Color(204, 102, 0));
        Transfer.setText("Transfer");
        Transfer.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        Transfer.setkBackGroundColor(new java.awt.Color(255, 102, 102));
        Transfer.setkBorderRadius(25);
        Transfer.setkEndColor(new java.awt.Color(255, 255, 51));
        Transfer.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        Transfer.setkStartColor(new java.awt.Color(0, 102, 102));
        Transfer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TransferMouseClicked(evt);
            }
        });

        togbtn1.setText("Show");
        togbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                togbtn1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel_TransferLayout = new javax.swing.GroupLayout(jPanel_Transfer);
        jPanel_Transfer.setLayout(jPanel_TransferLayout);
        jPanel_TransferLayout.setHorizontalGroup(
            jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 983, Short.MAX_VALUE)
            .addGroup(jPanel_TransferLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_TransferLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TransferLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TransferLayout.createSequentialGroup()
                                .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TransferLayout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(433, 433, 433))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TransferLayout.createSequentialGroup()
                                    .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(116, 116, 116)
                                    .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(national)
                                        .addComponent(AmountTO, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                        .addComponent(AccPass))
                                    .addGap(18, 18, 18)
                                    .addComponent(togbtn1)
                                    .addGap(157, 157, 157))
                                .addGroup(jPanel_TransferLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(127, 127, 127)))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TransferLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(414, 414, 414))
        );
        jPanel_TransferLayout.setVerticalGroup(
            jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TransferLayout.createSequentialGroup()
                .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_TransferLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(national, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AmountTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel_TransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AccPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(togbtn1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Transfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_Settings.setBackground(java.awt.Color.white);
        jPanel_Settings.setPreferredSize(new java.awt.Dimension(934, 510));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setPreferredSize(new java.awt.Dimension(943, 125));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );

        Settings_logo.setMaximumSize(new java.awt.Dimension(30, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Details");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 102));
        jLabel16.setText("First Name:");

        ffname.setBackground(new Color(0,0,0,0));
        ffname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        ffname.setDisabledTextColor(new java.awt.Color(204, 204, 0));
        ffname.setSelectedTextColor(new java.awt.Color(242, 242, 242));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 102, 102));
        jLabel17.setText("Last Name:");

        llname.setBackground(new Color(0,0,0,0));
        llname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        llname.setDisabledTextColor(new java.awt.Color(204, 204, 0));
        llname.setSelectedTextColor(new java.awt.Color(242, 242, 242));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 102, 102));
        jLabel18.setText("Email:");

        eemail.setBackground(new Color(0,0,0,0));
        eemail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        eemail.setDisabledTextColor(new java.awt.Color(204, 204, 0));
        eemail.setSelectedTextColor(new java.awt.Color(242, 242, 242));

        kButton2.setForeground(new java.awt.Color(204, 102, 0));
        kButton2.setText("Save");
        kButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        kButton2.setkBackGroundColor(new java.awt.Color(255, 102, 102));
        kButton2.setkBorderRadius(25);
        kButton2.setkEndColor(new java.awt.Color(255, 255, 51));
        kButton2.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        kButton2.setkStartColor(new java.awt.Color(0, 102, 102));
        kButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kButton2MouseClicked(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 102, 102));
        jLabel19.setText("Change Password");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 102, 102));
        jLabel20.setText("Current Password:");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 102, 102));
        jLabel21.setText("New Password:");

        kButton3.setForeground(new java.awt.Color(204, 102, 0));
        kButton3.setText("Save");
        kButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        kButton3.setkBackGroundColor(new java.awt.Color(255, 102, 102));
        kButton3.setkBorderRadius(25);
        kButton3.setkEndColor(new java.awt.Color(255, 255, 51));
        kButton3.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        kButton3.setkStartColor(new java.awt.Color(0, 102, 102));
        kButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kButton3MouseClicked(evt);
            }
        });

        oldd.setBackground(new Color(0,0,0,0));
        oldd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        oldd.setSelectedTextColor(new java.awt.Color(242, 242, 242));

        passs1.setBackground(new Color(0,0,0,0));
        passs1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        passs1.setSelectedTextColor(new java.awt.Color(242, 242, 242));

        jPanel_Mode.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 102, 102));
        jLabel22.setText("Choose Mode");

        LightMode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        //LightMode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/light.png")));
        LightMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LightModeActionPerformed(evt);
            }
        });

        DarkMode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        //DarkMode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/Dark.png")));
        DarkMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DarkModeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ModeLayout = new javax.swing.GroupLayout(jPanel_Mode);
        jPanel_Mode.setLayout(jPanel_ModeLayout);
        jPanel_ModeLayout.setHorizontalGroup(
            jPanel_ModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ModeLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel_ModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ModeLayout.createSequentialGroup()
                        .addGroup(jPanel_ModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DarkMode, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LightMode, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ModeLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(134, 134, 134))))
        );
        jPanel_ModeLayout.setVerticalGroup(
            jPanel_ModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ModeLayout.createSequentialGroup()
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(LightMode, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(DarkMode, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 98, Short.MAX_VALUE))
        );

        SupportButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        SupportButton.setForeground(new java.awt.Color(0, 102, 102));
        SupportButton.setText("Support");
        SupportButton.setToolTipText("Click here to get Support contacts");
        SupportButton.setBorder(null);
        SupportButton.setContentAreaFilled(false);
        SupportButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SupportButton.setPreferredSize(new java.awt.Dimension(75, 75));
        SupportButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SupportButtonMouseClicked(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 102, 102));
        jLabel23.setText("Confirm new Password:");

        passss2.setBackground(new Color(0,0,0,0));
        passss2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 102, 102)));
        passss2.setSelectedTextColor(new java.awt.Color(242, 242, 242));

        javax.swing.GroupLayout jPanel_SettingsLayout = new javax.swing.GroupLayout(jPanel_Settings);
        jPanel_Settings.setLayout(jPanel_SettingsLayout);
        jPanel_SettingsLayout.setHorizontalGroup(
            jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_SettingsLayout.createSequentialGroup()
                .addGap(443, 492, Short.MAX_VALUE)
                .addComponent(Settings_logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(443, 443, 443))
            .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(oldd, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                                    .addComponent(jLabel21)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(passs1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_SettingsLayout.createSequentialGroup()
                                    .addComponent(jLabel23)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Bar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(passss2)
                                        .addComponent(mess, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel19)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(kButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                                            .addComponent(jLabel18)
                                            .addGap(40, 40, 40)
                                            .addComponent(eemail, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                                            .addComponent(jLabel17)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(llname, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ffname, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(SupportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(kButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel_Mode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel_SettingsLayout.setVerticalGroup(
            jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Settings_logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_Mode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel_SettingsLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(ffname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(llname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(eemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(kButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(oldd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(passs1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(passss2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mess, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(kButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SupportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel_Dash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 157, Short.MAX_VALUE)
                    .addComponent(jPanel_Transaction, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 157, Short.MAX_VALUE)
                    .addComponent(jPanel_Cards, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 150, Short.MAX_VALUE)
                    .addComponent(jPanel_Transfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 149, Short.MAX_VALUE)
                    .addComponent(jPanel_Settings, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel_Dash, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel_Transaction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel_Cards, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel_Transfer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel_Settings, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void ShowDash()
    {
        showPanel(jPanel_Dash);
        UpdateCardsTable();
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        showPanel(jPanel_Dash);
        UpdateCardsTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //transfer button
        //JOptionPane.showMessageDialog(this,Acc_cardno+"\n"+Acc_fname+"\n"+National_no+"\n"+ball);
        national.setText(" ");
        AmountTO.setText(" ");
        AccPass.setText(" ");
        showPanel(jPanel_Transfer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
                    String sqlCommand = "select * from cards where Locked=?";
                    PreparedStatement pstmt = con.prepareStatement(sqlCommand);
                    pstmt.setString(1, "1");

                    ResultSet rs = pstmt.executeQuery();
                    FulName.setText(this.Acc_fname);
                    if (rs.next()) {
                       Expire.setText(rs.getString("expire_date"));
                       Cardii.setText(rs.getString("card_no"));
                    }
                    

                    rs.close();
                    pstmt.close();
                    con.close();
                } catch (ClassNotFoundException | SQLException e) {
                    // Handle exception
                     Mess mass2=new Mess(this);
                    mass2.showMessage("error in retrieving atm pin ",e.getMessage());
                    mass2.setVisible(true);
                    if(mass2.confirmed==true)
                    {
                      mass2.setVisible(false);
                      mass2.dispose();
                    }
                }
        UpdateCardsTable();
        //cards button
        showPanel(jPanel_Cards);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //transactions 
        DefaultTableModel model = (DefaultTableModel) TransTable.getModel();
        // Clear all rows from the table
        model.setRowCount(0);


        ResultSet rs=null;
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
        Statement stmt = con.createStatement();
        String sqlCommand ="select * from transaction_details where from_acc=? OR to_acc=?;";
        PreparedStatement pstmt = con.prepareStatement(sqlCommand);
        pstmt.setString(1,this.Acc_cardno);
        pstmt.setString(2,this.Acc_cardno);
        rs= pstmt.executeQuery();
        
        while (rs.next()) {
        // Retrieve data from the current row of the ResultSet
        String transactionNumber = rs.getString("Trans_no");
        String from = rs.getString("from_acc");
        String to = rs.getString("to_acc");
        String amount = rs.getString("amount");
        String balance = rs.getString("balance");
        String date = rs.getString("date");

        // Add the data to the model
        model.addRow(new String[]{transactionNumber, from, to, amount, balance,date});
        }

        // Close the ResultSet
        rs.close();
        pstmt.close();
        con.close();
        }
        catch(ClassNotFoundException | SQLException e)
        {
         JOptionPane.showMessageDialog(this,"error in transaction table data");
        }

        
        showPanel(jPanel_Transaction);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //Settings Button
        showPanel(jPanel_Settings);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton_LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LogoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Login loginFrame = new Login();
        loginFrame.setVisible(true);
        Login.WelcomeUserName=" ";
//        loginFrame.pack();
//        loginFrame.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton_LogoutActionPerformed

    private void jButton_ModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ModeActionPerformed
        // TODO add your handling code here:
         javax.swing.JPanel myPanel1 = this.jPanel_Dash; 
         javax.swing.JPanel myPanel2 = this.jPanel_Cards; 
         javax.swing.JPanel myPanel3 = this.jPanel_Settings; 
         javax.swing.JPanel myPanel4 = this.jPanel_Transaction;
         javax.swing.JPanel myPanel5 = this.jPanel_Transfer; 

    if (isDarkMode) {
        // Switch to light mode
        myPanel1.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel2.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel3.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel4.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel5.setBackground(java.awt.Color.WHITE); // Light mode color
        isDarkMode = false; // Update the mode
    } else {
        // Switch to dark mode
        myPanel1.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel2.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel3.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel4.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel5.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        isDarkMode = true; // Update the mode
    }

    // You may also change button text to indicate the current mode
    //toggleButton.setText(isDarkMode ? "Switch to Light Mode" : "Switch to Dark Mode");
    }//GEN-LAST:event_jButton_ModeActionPerformed

    private void TransferMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransferMouseClicked
        String toNationalId = national.getText().trim();
        long sendAmount;

        try {
            sendAmount = Long.parseLong(AmountTO.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid amount. Please enter a valid numeric value.");
            return;
        }

        char[] passChars = AccPass.getPassword();
        String password = new String(passChars);

        if (this.National_no.equals(toNationalId)) {
            JOptionPane.showMessageDialog(this, "You cannot send money to yourself.");
            return;
        }

        if (sendAmount <= 0) {
            JOptionPane.showMessageDialog(this, "Invalid amount. Please enter a positive value.");
            return;
        }

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");

            String sqlCommand = "SELECT a.balance AS Bal, c.fname fn, a.card_number AS cn FROM customers AS c JOIN account AS a ON c.national_id = a.national_no WHERE c.national_id = ?";
            PreparedStatement pstmt = con.prepareStatement(sqlCommand);   
            pstmt.setString(1, toNationalId); // Receiver
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                long senderNewBalance = Long.parseLong(this.ball) - sendAmount;

                if (senderNewBalance < 0) {
                    JOptionPane.showMessageDialog(this, "Insufficient balance.");
                    return;
                }

                try {
                    String sqlCommand3 = "UPDATE account SET balance = ? WHERE card_number = ?";
                    PreparedStatement pstmt3 = con.prepareStatement(sqlCommand3);   
                    pstmt3.setLong(1, senderNewBalance);
                    pstmt3.setString(2, this.Acc_cardno);
                    int rs3 = pstmt3.executeUpdate();

                    long receiverNewBalance = Long.parseLong(rs.getString("Bal")) + sendAmount;

                    String sqlCommand4 = "UPDATE account SET balance = ? WHERE card_number = ?";
                    PreparedStatement pstmt4 = con.prepareStatement(sqlCommand4);   
                    pstmt4.setLong(1, receiverNewBalance);
                    pstmt4.setString(2, rs.getString("cn"));
                    int rs4 = pstmt4.executeUpdate();

                    LocalDate currentDate = LocalDate.now();
                    String currentDateString = currentDate.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));

                    String sqlCommand5 = "INSERT INTO transaction_details(Trans_no, from_acc, to_acc, amount, balance, date) VALUES (?, ?, ?, ?, ?, ?)";
                    this.Basic_transNO++;

                    PreparedStatement pstmt5 = con.prepareStatement(sqlCommand5);   
                    pstmt5.setInt(1, this.Basic_transNO);
                    pstmt5.setString(2, this.Acc_cardno);
                    pstmt5.setString(3, rs.getString("cn"));
                    pstmt5.setLong(4, sendAmount);
                    pstmt5.setLong(5, senderNewBalance);
                    pstmt5.setString(6, currentDateString);

                    int rs5 = pstmt5.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Transaction successful.");
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error processing transaction.");
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Recipient account not found.");
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Error connecting to database.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_TransferMouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel15MouseClicked

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
        // TODO add your handling code here:
        PrinterJob printerJob = PrinterJob.getPrinterJob();
        if (printerJob.printDialog()) {
            try {
                // Print the table
               TransTable.print();
            } catch (PrinterException e) {
                JOptionPane.showMessageDialog(this, "Printing failed: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_printMouseClicked

    private void ClearTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearTableMouseClicked
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
            Statement stmt = con.createStatement();
            String sqlCommand ="delete from transaction_details where from_acc=? OR to_acc=?;";
            PreparedStatement pstmt = con.prepareStatement(sqlCommand);
            pstmt.setString(1,Acc_cardno);           
            pstmt.setString(2,this.Acc_cardno);
            int rs = pstmt.executeUpdate();
            if (rs > 0) {
                JOptionPane.showMessageDialog(this,"Data deleted successfully.");
            } else {
                JOptionPane.showMessageDialog(this,"No row deleted. Check your parameters.");
            }
        }
        catch(Exception e)
        {
         JOptionPane.showMessageDialog(this,"error in transaction table data");
        }
        
        DefaultTableModel model = (DefaultTableModel) TransTable.getModel();
        // Clear all rows from the table
        model.setRowCount(0);
    }//GEN-LAST:event_ClearTableMouseClicked

    private void DeleteTableRowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteTableRowMouseClicked
        // TODO add your handling code here:
        int rowIndex = TransTable.getSelectedRow();
        int col=TransTable.getColumnCount()-3;
        if (rowIndex != -1) { // Check if a row is selected
            DefaultTableModel model = (DefaultTableModel) TransTable.getModel();

            // Create an array of strings to store the data of the selected row
            String TransNo=new String();
            String FromAcc=new String();
            String ToAcc=new String();
            String Amount=new String();
            String Balance=new String();
            String Date=new String();
            
            // Retrieve data from the selected row and store it in the array
            for (int i = 0; i < 6; i++) {
                Object value = model.getValueAt(rowIndex, i);
                switch(i)
                {
                    case 0:
                          TransNo = (value == null) ? "" : value.toString();
                          break;
                    case 1:
                          FromAcc = (value == null) ? "" : value.toString();
                          break;
                    case 2:
                          ToAcc = (value == null) ? "" : value.toString();
                          break;
                    case 3:
                          Amount = (value == null) ? "" : value.toString();
                          break;
                    case 4:
                          Balance = (value == null) ? "" : value.toString();
                          break;
                    case 5:
                          Date = (value == null) ? "" : value.toString();
                          break;
                }
            }
            
           try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");

                String sqlCommand = "DELETE FROM transaction_details WHERE Trans_no=? AND from_acc=? AND to_acc=? AND amount=? AND balance=? AND date=?";
                PreparedStatement pstmt = con.prepareStatement(sqlCommand);

                pstmt.setString(1, TransNo);
                pstmt.setString(2, FromAcc);
                pstmt.setString(3, ToAcc);
                pstmt.setString(4, Amount);
                pstmt.setString(5, Balance);
                pstmt.setString(6, Date);

                int rowsAffected = pstmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this,"Row deleted successfully.");
                } else {
                    JOptionPane.showMessageDialog(this,"No row deleted. Check your parameters.");
                }

                pstmt.close();
                con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            // Clear all rows from the table
            model.setRowCount(0);


            ResultSet rs=null;
            try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
            Statement stmt = con.createStatement();
            String sqlCommand ="select * from transaction_details where from_acc=? OR to_acc=?;";
            PreparedStatement pstmt = con.prepareStatement(sqlCommand);
            pstmt.setString(1,this.Acc_cardno);
            pstmt.setString(2,this.Acc_cardno);
            rs= pstmt.executeQuery();

            while (rs.next()) {
            // Retrieve data from the current row of the ResultSet
            String transactionNumber = rs.getString("Trans_no");
            String from = rs.getString("from_acc");
            String to = rs.getString("to_acc");
            String amount = rs.getString("amount");
            String balance = rs.getString("balance");
            String date = rs.getString("date");

            // Add the data to the model
            model.addRow(new String[]{transactionNumber, from, to, amount, balance,date});
            }

            // Close the ResultSet
            rs.close();
            pstmt.close();
            con.close();
            }
            catch(Exception e)
            {
             JOptionPane.showMessageDialog(this,"error in transaction table data");
            }
            } else {
                 JOptionPane.showMessageDialog(this,"No row selected.");
            }
    }//GEN-LAST:event_DeleteTableRowMouseClicked

    private void togbtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_togbtn1MouseClicked
         if(togbtn1.isSelected())
        {
            AccPass.setEchoChar((char)0);
            togbtn1.setText("Hide");
        }
        else
        {
            AccPass.setEchoChar('*');
            togbtn1.setText("Show");
        }
    }//GEN-LAST:event_togbtn1MouseClicked
       
    private void kButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kButton2MouseClicked
        // TODO add your handling code here:
        String first=ffname.getText();
        String last=llname.getText();
        String emo=eemail.getText();
        if(emo.isEmpty()||last.isEmpty()||first.isEmpty())
        {
            Mess mass=new Mess(this);
            mass.showMessage("fields","Please enter all required fields");
        }
        else
        {
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
                Statement stmt = con.createStatement();
                String sqlCommand = "UPDATE customers set fname=?,lname=?,email=? where national_id=?;";
                PreparedStatement pstmt = con.prepareStatement(sqlCommand);

                pstmt.setString(1,first);
                pstmt.setString(2,last);
                pstmt.setString(3,emo);
                pstmt.setString(4,this.National_no);
                
                int rs =pstmt.executeUpdate();

                // Close resources
                pstmt.close();
                con.close();
            // Close the ResultSet, Statement, and Connection
            }
            catch (HeadlessException | ClassNotFoundException | SQLException e)
            {
                JOptionPane.showMessageDialog(this,e);
                System.out.println(e.getMessage());
                System.out.println("second");
            }
        }
    }//GEN-LAST:event_kButton2MouseClicked
    
     private void addPasswordListener() {
        Document doc = passs1.getDocument();
        doc.addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                handlePasswordChange();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                handlePasswordChange();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                handlePasswordChange();
            }
        });
    }
    
    private void addPassword2Listener() {
        Document doc = passss2.getDocument();
        doc.addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                handlePassword2Change();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                handlePassword2Change();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                handlePassword2Change();
            }
        });
    }
    
      private void handlePassword2Change(){
        
        
        
        char[] passChars2 = passs1.getPassword();
        String pass = new String(passChars2).trim();
        pass=pass.trim();

        char[] passChars3 = passss2.getPassword();
        String pass2 = new String(passChars3).trim();
        pass2=pass2.trim();
        
        System.out.println("password : "+pass2+"\n");

        System.out.println("confirm password : "+pass+"\n");
        if(pass.equals(pass2))
        {
            mess.setText("password mathced");
            confirmedpassword=true;
        }
        else
        {
            mess.setText("password are not matched");
            confirmedpassword=false;
        }
        System.out.println(confirmedpassword);
      }
      
      
    private void handlePasswordChange() {
        char[] passChars2 = passs1.getPassword();
        String pass = new String(passChars2);
        System.out.println("password : " +pass+"\n");
        pass=pass.trim();
       if(PatternChecker.MatchPattern(pass))
       {
           Bar.setColor(Color.GREEN); // Set the color of the progress bar
           mess.setText("password accepted");
           Bar.setValue(100);
       }
       else if(!PatternChecker.MatchPatternSchars(pass)&&PatternChecker.MatchPatternchars(pass)&&PatternChecker.MatchPattern8Num(pass))
       {
           Bar.setColor(new java.awt.Color(255, 0, 51));
           mess.setText("password must contain 1 special char");
           Bar.setValue(68);
       }
       else if(!PatternChecker.MatchPatternSchars(pass)&&!PatternChecker.MatchPatternchars(pass)&&PatternChecker.MatchPattern8Num(pass))
       {
           mess.setText("password must contain 1 upper case and 1 lower case");
           Bar.setColor(new java.awt.Color(255, 0, 51));
           Bar.setValue(34);
       }
       else if(!PatternChecker.MatchPatternSchars(pass)&&!PatternChecker.MatchPatternchars(pass)&&!PatternChecker.MatchPattern8Num(pass))
       {
    //                nums.setBackground(new java.awt.Color(204, 0, 0));
            Bar.setColor(new java.awt.Color(255, 0, 51));
            mess.setText("password must contain 8 numbers");
       }
       else {
    //                System.out.println("color changed");
           Bar.setColor(Color.GREEN); // Set the color of the progress bar
           mess.setText("password accepted");
           Bar.setValue(100);
       }

       if(pass.isEmpty())
       {
           Bar.setValue(0);
       }
    }
    private void kButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kButton3MouseClicked
        // TODO add your handling code here:
          char[] passChars = oldd.getPassword();
        String old = new String(passChars);
        
        char[] passChars2 = passs1.getPassword();
        String pas1 = new String(passChars2);
        
        char[] passChars3 = passss2.getPassword();
        String pas2 = new String(passChars3);
        
        if(old.isEmpty()||pas1.isEmpty()||pas2.isEmpty())
        {
            Mess mass=new Mess(this);
            mass.showMessage("fields","Please enter all required fields");
        }
        else if(!old.equals(this.acc_pass))
        {
            Mess mass=new Mess(this);
            mass.showMessage("Old password","the old password you entered is not correct");
        }
        else
        {
            mess.setText("password matched");
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
                Statement stmt = con.createStatement();
                String sqlCommand = "UPDATE account set acc_pass=? where national_no=?;";
                PreparedStatement pstmt = con.prepareStatement(sqlCommand);

                pstmt.setString(1,pas1);
                pstmt.setString(2,this.National_no);
                
                int rs =pstmt.executeUpdate();

                Mess mass=new Mess(this);
                mass.showMessage("acc password","account password chaned successfully");
                // Close resources
                pstmt.close();
                con.close();
            // Close the ResultSet, Statement, and Connection
            }
            catch (HeadlessException | ClassNotFoundException | SQLException e)
            {
                JOptionPane.showMessageDialog(this,e);
                System.out.println(e.getMessage());
                System.out.println("second");
            }
        }
    }//GEN-LAST:event_kButton3MouseClicked

    private void LightModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LightModeActionPerformed
        // TODO add your handling code here:
        javax.swing.JPanel myPanel1 = this.jPanel_Dash;
        javax.swing.JPanel myPanel2 = this.jPanel_Cards;
        javax.swing.JPanel myPanel3 = this.jPanel_Settings;
        javax.swing.JPanel myPanel4 = this.jPanel_Transaction;
        javax.swing.JPanel myPanel5 = this.jPanel_Transfer;
        javax.swing.JPanel myPanel6 = this.jPanel_Mode;
        myPanel1.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel2.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel3.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel4.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel5.setBackground(java.awt.Color.WHITE); // Light mode color
        myPanel6.setBackground(java.awt.Color.WHITE); // Light mode color
        isDarkMode = false; // Update the mode
    }//GEN-LAST:event_LightModeActionPerformed

    private void DarkModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DarkModeActionPerformed
        // TODO add your handling code here:
        javax.swing.JPanel myPanel1 = this.jPanel_Dash;
        javax.swing.JPanel myPanel2 = this.jPanel_Cards;
        javax.swing.JPanel myPanel3 = this.jPanel_Settings;
        javax.swing.JPanel myPanel4 = this.jPanel_Transaction;
        javax.swing.JPanel myPanel5 = this.jPanel_Transfer;
        javax.swing.JPanel myPanel6 = this.jPanel_Mode;
        myPanel1.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel2.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel3.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel4.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel5.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        myPanel6.setBackground(java.awt.Color.DARK_GRAY); // Dark mode color
        isDarkMode = true; // Update the mode
    }//GEN-LAST:event_DarkModeActionPerformed

    private void SupportButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupportButtonMouseClicked
        // TODO add your handling code here:
        mail mailo=new mail(this);
        mailo.showMessage("Navigate to mail",".");
        
    }//GEN-LAST:event_SupportButtonMouseClicked

    private void AddCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddCardMouseClicked
       // Create a new PaneAddCard dialog
        PaneAddCard AddCard = new PaneAddCard(this);
        AddCard.showMessage("Are you sure of this information?", "click on ok to add that data");
        
        AddCard.setVisible(true);

        // Check if the user confirmed the dialog
        if (AddCard.confirmed==true) {
            // Get the user input
            String CardNum = AddCard.CardNum.getText();
            char[] passwordChars = AddCard.Password.getPassword();
            String atmPin = new String(passwordChars);
            Date selectedDate = AddCard.expire_date.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String formattedDate = dateFormat.format(selectedDate);
            char[] passwordChars2 = AddCard.Password2.getPassword();
            String confirmAtmPin = new String(passwordChars2);
            String cvv = AddCard.cvv.getText();
            try {
                // Use a PreparedStatement to insert the new card details into the database
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
                String sqlCommand = "INSERT INTO cards (card_no, cvv, national_no, atm_pin, expire_date, balance) VALUES ( ?, ?, ?, ?, ?, ?);";
                PreparedStatement pstmt = con.prepareStatement(sqlCommand);

                String accType = new String();

                pstmt.setString(1, CardNum);
                pstmt.setString(2, cvv);
                pstmt.setString(3, this.National_no);
                pstmt.setString(4, atmPin);
                pstmt.setObject(5, formattedDate);
                pstmt.setString(6, "0");

                pstmt.executeUpdate();

                // Close resources
                pstmt.close();
                con.close();

                UpdateCardsTable();

            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(this, e);
                System.out.println(e.getMessage());
                System.out.println("add card");
            }
        }
        AddCard.dispose();
    }//GEN-LAST:event_AddCardMouseClicked

    private void DelCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DelCardMouseClicked
        // TODO add your handling code here:
        
        Mess2 DelCards = new Mess2(this);
        DelCards.showMessage("Delete this card ?", "All data will lose if you press ok button\nYou can restore any time within 30 days start from now.");

        
        DelCards.setVisible(true);

        // Check if the user confirmed the dialog
        if (DelCards.confirmed==true) {
            
            int rowIndex = CardsTable.getSelectedRow();
            int col=CardsTable.getColumnCount()-3;
            if (rowIndex != -1) { // Check if a row is selected

                DefaultTableModel model = (DefaultTableModel) CardsTable.getModel();

                // Create an array of strings to store the data of the selected row
                String cardo=new String();

                Object value = model.getValueAt(rowIndex, 1);
                cardo = (value == null) ? "" : value.toString();

               try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");

                    String sqlCommand = "DELETE FROM cards WHERE card_no=? AND national_no=?";
                    PreparedStatement pstmt = con.prepareStatement(sqlCommand);

                    pstmt.setString(1, cardo);
                    pstmt.setString(2, this.National_no);


                    int rowsAffected = pstmt.executeUpdate();

                    if (rowsAffected > 0) {
                        Mess mass=new Mess(this);
                        mass.showMessage("card", cardo+" is deleted successfully");
                        if(mass.confirmed==true)
                        {
                         mass.setVisible(false);
                         mass.dispose();
                        }
                    } else {
                        Mess mass=new Mess(this);
                        mass.showMessage("card","No row deleted. Check your parameters.");
                        if(mass.confirmed==true)
                        {
                         mass.setVisible(false);
                         mass.dispose();
                        }
                    }

                    pstmt.close();
                    con.close();
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    e.printStackTrace();
                }                   
                UpdateCardsTable();
            }
        }
        else {
            Mess masss=new Mess(this);
            masss.showMessage("card","no card selected\nplease select a card");
            masss.setVisible(true);
            if(masss.confirmed==true)
            {
                masss.setVisible(false);
                masss.dispose();
            }
        }
        DelCards.dispose();
    }//GEN-LAST:event_DelCardMouseClicked

    private void SetCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetCardMouseClicked
        // TODO add your handling code here:
          int rowIndex = CardsTable.getSelectedRow();
            int col=CardsTable.getColumnCount()-3;
            if (rowIndex != -1) { // Check if a row is selected
                
                String atmo=new String();
                DefaultTableModel model = (DefaultTableModel) CardsTable.getModel();

                // Create an array of strings to store the data of the selected row
                String cardo;
                Object value = model.getValueAt(rowIndex, 1);
                cardo = (value == null) ? "" : value.toString();
                
                try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
                Statement stmt = con.createStatement();
                String sqlCommand ="select atm_pin from cards where card_no=?;";
                PreparedStatement pstmt = con.prepareStatement(sqlCommand);
                pstmt.setString(1,cardo);
                
                ResultSet rs= pstmt.executeQuery();

                if(rs.next()) {
                    atmo=rs.getString("atm_pin");
                }
                System.out.println(atmo+"\n");
                // Close the ResultSet
                rs.close();
                pstmt.close();
                con.close();
                }
                catch(  ClassNotFoundException | SQLException e)
                {
                    Mess mass=new Mess(this);
                    mass.showMessage("error in retrieving atm pin",e.getMessage());
                    mass.setVisible(true);
                    if(mass.confirmed==true)
                    {
                      mass.setVisible(false);
                      mass.dispose();
                    }
                }
                
                ResetPin reset = new ResetPin(this);
                reset.showMessage("Reset pin", "Enter the old password");

                reset.setVisible(true);
                
                
                if (reset.confirmed==true) {
                    char[] passChars = reset.Password.getPassword();
                    String newpin = new String(passChars);
                        
                    char[] passChars2 = reset.Old.getPassword();
                    String oldy = new String(passChars2);
                    
                    if(atmo.equals(oldy)){
                        try{

                       Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");

                        String sqlCommand = "UPDATE cards SET atm_pin=? where card_no=?";
                        PreparedStatement pstmt = con.prepareStatement(sqlCommand);

                        pstmt.setString(1,newpin);
                        pstmt.setString(2, cardo);

                        int ms= pstmt.executeUpdate();
                        }
                        catch(ClassNotFoundException | SQLException e)
                        {
                            Mess mass=new Mess(this);
                            mass.showMessage("problem in database",e.getMessage());
                            mass.setVisible(true);
                            if(mass.confirmed==true)
                            {
                                mass.setVisible(false);
                                mass.dispose();
                            }
                        }
                        Mess mass=new Mess(this);
                        mass.showMessage("Pin","Pin changed successfully to "+newpin);
                        mass.setVisible(true);
                        if(mass.confirmed==true)
                        {
                            mass.setVisible(false);
                            mass.dispose();
                        }
                    }
                    else
                    {
                        Mess mass=new Mess(this);
                        mass.showMessage("Old Pin","please enter your correct old pin");
                        mass.setVisible(true);
                        if(mass.confirmed==true)
                        {
                            mass.setVisible(false);
                            mass.dispose();
                        }
                    }
                }

                reset.dispose();
            }
            else
            {
                Mess mass=new Mess(this);
                mass.showMessage("No selected card","please select a card to reset it is pin");
                mass.setVisible(true);
                if(mass.confirmed==true)
                {
                    mass.setVisible(false);
                    mass.dispose();
                }
            }
    }//GEN-LAST:event_SetCardMouseClicked

    private void LockCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LockCardMouseClicked
        // TODO add your handling code here:
        Mess2 mass=new Mess2(this);
        mass.showMessage("Lock card","are you sure to lock this card");
        mass.setVisible(true);
        if(mass.confirmed==true)
        {
            int rowIndex = CardsTable.getSelectedRow();
            int col=CardsTable.getColumnCount()-3;
            if (rowIndex != -1) { // Check if a row is selected

                DefaultTableModel model = (DefaultTableModel) CardsTable.getModel();

                // Create an array of strings to store the data of the selected row
                String cardo=new String();

                Object value = model.getValueAt(rowIndex, 1);
                cardo = (value == null) ? "" : value.toString();
                
               try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
                    String sqlCommand = "select Locked from cards where Locked=?";
                    PreparedStatement pstmt = con.prepareStatement(sqlCommand);
                    pstmt.setString(1, "1");

                    ResultSet rs = pstmt.executeQuery();

                    if (rs.next()) {
                        try {
                            Class.forName("com.mysql.cj.jdbc.Driver");
                            Connection con2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");

                            String sqlCommand2 = "UPDATE cards SET Locked=? where Locked=?";
                            PreparedStatement pstmt2 = con2.prepareStatement(sqlCommand2);

                            pstmt2.setString(1, "0"); // Set to value you want to update to
                            pstmt2.setString(2, "1"); // Set to value you want to match

                            int rowsUpdated = pstmt2.executeUpdate();
                            System.out.println(rowsUpdated + " rows updated");
                            pstmt2.close();
                            con2.close();
                             Mess mass2=new Mess(this);
                            mass2.showMessage("lock card ","card "+cardo+" is locked now");
                            mass2.setVisible(true);
                            if(mass2.confirmed==true)
                            {
                              mass2.setVisible(false);
                              mass2.dispose();
                            }
                        } catch (ClassNotFoundException | SQLException ex) {
                            // Handle exception
                            Mess masss=new Mess(this);
                            masss.showMessage("problem in database",ex.getMessage());
                            masss.setVisible(true);
                            if(mass.confirmed==true)
                            {
                                masss.setVisible(false);
                                masss.dispose();
                            }
                        }
                    }

                    // Close ResultSet, PreparedStatement, and Connection
                    rs.close();
                    pstmt.close();
                    con.close();
                } catch (ClassNotFoundException | SQLException e) {
                    // Handle exception
                     Mess mass2=new Mess(this);
                    mass2.showMessage("error in retrieving atm pin ",e.getMessage());
                    mass2.setVisible(true);
                    if(mass2.confirmed==true)
                    {
                      mass2.setVisible(false);
                      mass2.dispose();
                    }
                }

                
                try{

                    Class.forName("com.mysql.cj.jdbc.Driver");
                     Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");

                     String sqlCommand = "UPDATE cards SET Locked=? where card_no= ?";
                     PreparedStatement pstmt = con.prepareStatement(sqlCommand);

                     pstmt.setString(1, "1");
                     pstmt.setString(2, cardo);

                     int ms= pstmt.executeUpdate();
                    }
                 catch(ClassNotFoundException | SQLException e)
                 {
                     Mess masss=new Mess(this);
                     masss.showMessage("problem in database",e.getMessage());
                     masss.setVisible(true);
                     if(mass.confirmed==true)
                     {
                         masss.setVisible(false);
                         masss.dispose();
                     }
                 }
            }
            else
            {
                 Mess masss=new Mess(this);
                masss.showMessage("no card selected","please select a card");
                masss.setVisible(true);
                if(masss.confirmed==true)
                {
                    masss.setVisible(false);
                    masss.dispose();
                }
            }
        }
        try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BankDatabase?serverTimezone=UTC", "root", "123456");
                    String sqlCommand = "select * from cards where Locked=?";
                    PreparedStatement pstmt = con.prepareStatement(sqlCommand);
                    pstmt.setString(1, "1");

                    ResultSet rs = pstmt.executeQuery();
                    FulName.setText(this.Acc_fname);
                    if (rs.next()) {
                       Expire.setText(rs.getString("expire_date"));
                       Cardii.setText(rs.getString("card_no"));
                    }
                    System.out.println(FulName.getText());
                    System.out.println(Expire.getText());
                    System.out.println(Cardii.getText());

                    rs.close();
                    pstmt.close();
                    con.close();
                } catch (ClassNotFoundException | SQLException e) {
                    // Handle exception
                     Mess mass2=new Mess(this);
                    mass2.showMessage("error in retrieving atm pin ",e.getMessage());
                    mass2.setVisible(true);
                    if(mass2.confirmed==true)
                    {
                      mass2.setVisible(false);
                      mass2.dispose();
                    }
                }
        mass.dispose();
    }//GEN-LAST:event_LockCardMouseClicked

    private void AmountTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmountTOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmountTOActionPerformed

    /**
     *
     * @param args
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Dash DashFrame = new Dash(); 
        DashFrame.pack();
        DashFrame.setLocationRelativeTo(null);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dash().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField AccPass;
    private com.k33ptoo.components.KButton AddCard;
    private javax.swing.JTextField AmountTO;
    private Classes.ProgressBarCustom Bar;
    private javax.swing.JLabel Cardii;
    private javax.swing.JTable CardsTable;
    private com.k33ptoo.components.KButton ClearTable;
    private javax.swing.JButton DarkMode;
    private com.k33ptoo.components.KButton DelCard;
    private com.k33ptoo.components.KButton DeleteTableRow;
    private javax.swing.JLabel Expire;
    private javax.swing.JLabel FulName;
    private javax.swing.JButton LightMode;
    private com.k33ptoo.components.KButton LockCard;
    private com.k33ptoo.components.KButton SetCard;
    private javax.swing.JLabel Settings_logo;
    private javax.swing.JButton SupportButton;
    private javax.swing.JTable TransTable;
    private com.k33ptoo.components.KButton Transfer;
    public javax.swing.JLabel WelcomingMess;
    private javax.swing.JTextField eemail;
    private javax.swing.JTextField ffname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton_Logout;
    private javax.swing.JButton jButton_Mode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel_Cards;
    private javax.swing.JPanel jPanel_Dash;
    private javax.swing.JPanel jPanel_Mode;
    private javax.swing.JPanel jPanel_Settings;
    private javax.swing.JPanel jPanel_Transaction;
    private javax.swing.JPanel jPanel_Transfer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.k33ptoo.components.KButton kButton2;
    private com.k33ptoo.components.KButton kButton3;
    private javax.swing.JPanel left;
    private javax.swing.JTextField llname;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel mess;
    private javax.swing.JTextField national;
    private javax.swing.JPasswordField oldd;
    private javax.swing.JPasswordField passs1;
    private javax.swing.JPasswordField passss2;
    private com.k33ptoo.components.KButton print;
    private javax.swing.JToggleButton togbtn1;
    public javax.swing.JLabel transactions;
    // End of variables declaration//GEN-END:variables
}
